#!/usr/bin/env python
import sys
import argparse
import ptracker.commands
import ptracker.configuration

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--guid', help="Your PivotalTracker GUID")
    
    subparsers = parser.add_subparsers()
    projects_parser = subparsers.add_parser('projects', help="Get the list of projects")
    projects_parser.set_defaults(command='projects')

    stories_parser = subparsers.add_parser('stories', help="Get information about the stories")
    stories_parser.set_defaults(command='stories')
    stories_parser.add_argument('--project-id', help="The project ID to get the stories from")

    story_parser = subparsers.add_parser('story', help="Get information about a bug")
    story_parser.set_defaults(command='story')
    story_parser.add_argument('--project-id', help="The project ID to get the story from")
    story_parser.add_argument('--story-id', help="The story ID of the story to get")

    args = parser.parse_args()

    ptracker.configuration.initialize(args)
    if ptracker.configuration.get('guid') is None:
        print("Please specify a GUID either in ~/.ptracker or via --guid <guid>")
        return 1
   
    guid = ptracker.configuration.get('guid')
    print("Using GUID {0}".format(guid))
    if args.command == 'projects':
        return ptracker.commands.projects(guid)

    elif args.command == 'stories':
        return ptracker.commands.stories(guid, args.project_id)

    elif args.command == 'story':
        return ptracker.commands.story(guid, args.project_id, args.story_id)
    return 0

if __name__ == '__main__':
    sys.exit(main())
    
